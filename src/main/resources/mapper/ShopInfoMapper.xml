<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ex.project.mapper.ShopInfoMapper">
    <resultMap id="BaseResultMap" type="com.ex.project.model.ShopInfo">
        <id column="s_id" jdbcType="INTEGER" property="sId"/>
        <result column="s_name" jdbcType="VARCHAR" property="sName"/>
        <result column="s_phone" jdbcType="CHAR" property="sPhone"/>
        <result column="s_password" jdbcType="VARCHAR" property="sPassword"/>
        <result column="s_head_name" jdbcType="VARCHAR" property="sHeadName"/>
        <result column="s_email" jdbcType="VARCHAR" property="sEmail"/>
        <result column="s_business_license" jdbcType="VARCHAR" property="sBusinessLicense"/>
        <result column="s_address" jdbcType="VARCHAR" property="sAddress"/>
        <result column="s_flag" jdbcType="INTEGER" property="sFlag"/>
        <result column="m_id" jdbcType="INTEGER" property="mId"/>
    </resultMap>
    <sql id="Base_Column_List">
    s_id, s_name, s_phone, s_password, s_head_name, s_email, s_business_license, s_address, 
    s_flag, m_id
  </sql>
    <!--denglu-->
    <select id="loginShop" resultType="com.ex.project.model.ShopInfo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from s_shopinfo
        where s_phone = #{sPhone}
    </select>


    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from s_shopinfo
        where s_id = #{sId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from s_shopinfo
    where s_id = #{sId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.ex.project.model.ShopInfo">
    insert into s_shopinfo (s_id, s_name, s_phone, 
      s_password, s_head_name, s_email, 
      s_business_license, s_address, s_flag, 
      m_id)
    values (#{sId,jdbcType=INTEGER}, #{sName,jdbcType=VARCHAR}, #{sPhone,jdbcType=CHAR}, 
      #{sPassword,jdbcType=VARCHAR}, #{sHeadName,jdbcType=VARCHAR}, #{sEmail,jdbcType=VARCHAR}, 
      #{sBusinessLicense,jdbcType=VARCHAR}, #{sAddress,jdbcType=VARCHAR}, #{sFlag,jdbcType=INTEGER}, 
      #{mId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.ex.project.model.ShopInfo">
        insert into s_shopinfo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sId != null">
                s_id,
            </if>
            <if test="sName != null">
                s_name,
            </if>
            <if test="sPhone != null">
                s_phone,
            </if>
            <if test="sPassword != null">
                s_password,
            </if>
            <if test="sHeadName != null">
                s_head_name,
            </if>
            <if test="sEmail != null">
                s_email,
            </if>
            <if test="sBusinessLicense != null">
                s_business_license,
            </if>
            <if test="sAddress != null">
                s_address,
            </if>
            <if test="sFlag != null">
                s_flag,
            </if>
            <if test="mId != null">
                m_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sId != null">
                #{sId,jdbcType=INTEGER},
            </if>
            <if test="sName != null">
                #{sName,jdbcType=VARCHAR},
            </if>
            <if test="sPhone != null">
                #{sPhone,jdbcType=CHAR},
            </if>
            <if test="sPassword != null">
                #{sPassword,jdbcType=VARCHAR},
            </if>
            <if test="sHeadName != null">
                #{sHeadName,jdbcType=VARCHAR},
            </if>
            <if test="sEmail != null">
                #{sEmail,jdbcType=VARCHAR},
            </if>
            <if test="sBusinessLicense != null">
                #{sBusinessLicense,jdbcType=VARCHAR},
            </if>
            <if test="sAddress != null">
                #{sAddress,jdbcType=VARCHAR},
            </if>
            <if test="sFlag != null">
                #{sFlag,jdbcType=INTEGER},
            </if>
            <if test="mId != null">
                #{mId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ex.project.model.ShopInfo">
        update s_shopinfo
        <set>
            <if test="sName != null">
                s_name = #{sName,jdbcType=VARCHAR},
            </if>
            <if test="sPhone != null">
                s_phone = #{sPhone,jdbcType=CHAR},
            </if>
            <if test="sPassword != null">
                s_password = #{sPassword,jdbcType=VARCHAR},
            </if>
            <if test="sHeadName != null">
                s_head_name = #{sHeadName,jdbcType=VARCHAR},
            </if>
            <if test="sEmail != null">
                s_email = #{sEmail,jdbcType=VARCHAR},
            </if>
            <if test="sBusinessLicense != null">
                s_business_license = #{sBusinessLicense,jdbcType=VARCHAR},
            </if>
            <if test="sAddress != null">
                s_address = #{sAddress,jdbcType=VARCHAR},
            </if>
            <if test="sFlag != null">
                s_flag = #{sFlag,jdbcType=INTEGER},
            </if>
            <if test="mId != null">
                m_id = #{mId,jdbcType=INTEGER},
            </if>
        </set>
        where s_id = #{sId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ex.project.model.ShopInfo">
    update s_shopinfo
    set s_name = #{sName,jdbcType=VARCHAR},
      s_phone = #{sPhone,jdbcType=CHAR},
      s_password = #{sPassword,jdbcType=VARCHAR},
      s_head_name = #{sHeadName,jdbcType=VARCHAR},
      s_email = #{sEmail,jdbcType=VARCHAR},
      s_business_license = #{sBusinessLicense,jdbcType=VARCHAR},
      s_address = #{sAddress,jdbcType=VARCHAR},
      s_flag = #{sFlag,jdbcType=INTEGER},
      m_id = #{mId,jdbcType=INTEGER}
    where s_id = #{sId,jdbcType=INTEGER}
  </update>


</mapper>