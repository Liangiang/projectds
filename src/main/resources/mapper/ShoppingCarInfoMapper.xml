<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ex.project.mapper.ShoppingCarInfoMapper">
    <resultMap id="BaseResultMap" type="com.ex.project.model.ShoppingCarInfo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="g_id" jdbcType="INTEGER" property="gId"/>
        <result column="u_id" jdbcType="INTEGER" property="uId"/>
        <result column="purchase_num" jdbcType="INTEGER" property="purchaseNum"/>
        <result column="insert_time" jdbcType="TIMESTAMP" property="insertTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, g_id, u_id, purchase_num, insert_time
  </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from shoppingcarinfo
        where id = #{id,jdbcType=INTEGER}
    </select>
    <!--该用户的所有购物车信息-->
    <select id="selectByUId" resultMap="BaseResultMap">
        select
        a.id as id, a.g_id as gId, a.purchase_num as purchaseNum,  b.g_name as gName, b.g_stock as gStock, b.price, b.type_name as typeName, b.img_url as imgUrl
        from shoppingcarinfo a,
        g_goodsinfo b
        where a.g_id=b.g_id
        u_id = #{uId}
    </select>
    <!--判断是否已经加过购物车-->
    <select id="selectByGId" parameterType="com.ex.project.model.ShoppingCarInfo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from shoppingcarinfo
        where g_id = #{gId}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shoppingcarinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.ex.project.model.ShoppingCarInfo">
    insert into shoppingcarinfo (id, g_id, u_id, 
      purchase_num, insert_time)
    values (#{id,jdbcType=INTEGER}, #{gId,jdbcType=INTEGER}, #{uId,jdbcType=INTEGER}, 
      #{purchaseNum,jdbcType=INTEGER}, #{insertTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.ex.project.model.ShoppingCarInfo">
        insert into shoppingcarinfo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="gId != null">
                g_id,
            </if>
            <if test="uId != null">
                u_id,
            </if>
            <if test="purchaseNum != null">
                purchase_num,
            </if>
            <if test="insertTime != null">
                insert_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="gId != null">
                #{gId,jdbcType=INTEGER},
            </if>
            <if test="uId != null">
                #{uId,jdbcType=INTEGER},
            </if>
            <if test="purchaseNum != null">
                #{purchaseNum,jdbcType=INTEGER},
            </if>
            <if test="insertTime != null">
                #{insertTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ex.project.model.ShoppingCarInfo">
        update shoppingcarinfo
        <set>
            <if test="gId != null">
                g_id = #{gId,jdbcType=INTEGER},
            </if>
            <if test="uId != null">
                u_id = #{uId,jdbcType=INTEGER},
            </if>
            <if test="purchaseNum != null">
                purchase_num = #{purchaseNum,jdbcType=INTEGER},
            </if>
            <if test="insertTime != null">
                insert_time = #{insertTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ex.project.model.ShoppingCarInfo">
    update shoppingcarinfo
    set g_id = #{gId,jdbcType=INTEGER},
      u_id = #{uId,jdbcType=INTEGER},
      purchase_num = #{purchaseNum,jdbcType=INTEGER},
      insert_time = #{insertTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>